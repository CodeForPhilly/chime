name: Docker

on:
  push:
    # Publish `v1.2.3` tags as releases.
    tags:
      - v*

  # Run tests for any PRs.
  pull_request:

env:
  IMAGE_NAME: penn-chime
  DEPLOY_PUSH_BRANCH: develop
  DEPLOY_KUBECONFIG_SECRET: kubeconfig_data_preprod

jobs:
  # Run tests.
  # See also https://docs.docker.com/docker-hub/builds/automated-testing/
  test:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Run tests
        run: |
          if [ -f docker-compose.test.yml ]; then
            docker-compose --file docker-compose.test.yml build
            docker-compose --file docker-compose.test.yml run sut
          else
            docker build . --file Dockerfile
          fi

  # Push image to GitHub Packages.
  # See also https://docs.docker.com/docker-hub/builds/
  push:
    # Ensure test job passes before pushing image.
    needs: test

    runs-on: ubuntu-latest
    if: github.event_name == 'push'

    steps:
      - uses: actions/checkout@v2

      - name: Build image
        run: docker build . --file Dockerfile --tag image

      - name: Log into registry
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login docker.pkg.github.com -u ${{ github.actor }} --password-stdin

      - name: Push image
        run: |
          IMAGE_ID="docker.pkg.github.com/${GITHUB_REPOSITORY,,}/${IMAGE_NAME}"

          # Strip git ref prefix from version
          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')

          # Strip "v" prefix from tag name
          [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')

          # Pass version number to subsequent jobs
          echo "::set-env name=VERSION::$VERSION"

          # Use Docker `latest` tag convention
          [ "$VERSION" == "master" ] && VERSION=latest

          echo IMAGE_ID=$IMAGE_ID
          echo VERSION=$VERSION

          docker tag image $IMAGE_ID:$VERSION
          docker push $IMAGE_ID:$VERSION

  deploy-preprod:

    needs: push
    if: github.event_name == 'push'
    runs-on: ubuntu-latest
    env:
      KUBE_CONFIG_DATA: ${{ secrets[env.DEPLOY_KUBECONFIG_SECRET] }}

    steps:
      - uses: actions/checkout@v2
      - name: Update application manifest
        run: |
          sed -Ei "s/(- image: .*):(.*)/\1:$VERSION/" k8s/app.yaml
      - name: Deploy to preprod
        uses: steebchen/kubectl@v1.0.0
        with:
          args: apply -f k8s/app.yaml
      - name: Wait for deploy to complete
        uses: steebchen/kubectl@v1.0.0
        with:
          args: -n chime rollout status deployment.v1.apps/chime
      - name: Show completed deployment
        uses: steebchen/kubectl@v1.0.0
        with:
          args: -n chime get deployment chime -o yaml
      - name: Push manifest update
        uses: github-actions-x/commit@v2.5
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          push-branch: ${DEPLOY_PUSH_BRANCH}
          commit-message: Deploy version ${VERSION} to preprod
          rebase: 'true'
